# 动态请求服务器池
upstream api_server {
    ip_hash;
    # server unix:/www/web/project_name/socket.sock;  # 使用该服务器socket通信的方式，比http服务器开销更小
    server snowgo-service:8000 weight=1 max_fails=3 fail_timeout=300s; # 允许的最大失败次数为3,如果超过,将暂时从可用服务器列表中移除,并在300秒后重新尝试。
}

server {
    listen       8080;  # 监听的端口号
    server_name  $host;  # ip或者域名
    error_page  404 403 500 502 503  /404.html;  # 重定向nginx的错误页面

    location /api {
        # 使用http协议配置方法
        proxy_pass  http://api_server;        # 这里http后等于第一行配置的名字
        proxy_redirect     off;
        proxy_set_header   Host             $host;
        proxy_set_header   X-Real-IP        $remote_addr;
        proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;

        # nginx用作代理的时候配置（和http连接方法一起使用）
        proxy_send_timeout 600;  # 完成握手后向代理请求的超时时间
        proxy_connect_timeout 600;  # 指定连接到后端http的超时时间
        proxy_read_timeout 600;  # 完成握手后接收代理应答的超时时间

        # uwsgi_pass使用uwsgi协议。proxy_pass使用普通的HTTP与uWSGI服务器联系。uWSGI文档声称该协议更好，更快，并且可以受益于所有uWSGI特殊功能
        # include uwsgi_params;
        # uwsgi_pass api_server;

        # uwsgi连接的时候配置
        # uwsgi_read_timeout 600;  # 指定接收uWSGI应答的超时时间，完成握手后接收uWSGI应答的超时时间
        # uwsgi_connect_timeout 600;   # 指定连接到后端uWSGI的超时时间
        # uwsgi_send_timeout 600;  # 指定向uWSGI传送请求的超时时间，完成握手后向uWSGI传送请求的超时时间
    }

    # 重定向自定义的页面
    location = /404.html {
        root   /usr/share/nginx/html/dist/;  # html地址
    }
    # 防止盗链，减少服务器压力
    location ~* \.(jpg|jpeg|bmp|gif|png|css|js|ico|webp|tiff|ttf|svg|woff|woff2) {
         # valid_referers none blocked *.xxx.com xxx.com ~\.google\. ~\.bing\. ~\.baidu\.;  # 可以访问的网站（后面为谷歌，百度，必应等）
         # if ($invalid_referer) {
         #    return 403;  # 也可以直接返回一个禁止盗链的提示
         # }
        root /usr/share/nginx/html/dist/;  # 前端路由
        expires 30d;
        access_log      off;  # 不需要写入访问日志中
    }

    location /favicon.ico {
        root /usr/share/nginx/html/dist/;
        access_log      off;  # 不需要写入访问日志中
        log_not_found   off;  # 是否在error_log中记录不存在的错误。默认是
    }

    location / {
        root /usr/share/nginx/html/dist;
        index index.html;
        try_files $uri $uri/ /index.html;
        add_header Access-Control-Allow-Origin *;
        add_header X-Real-IP $remote_addr;
    }
}