# max_clients = worker_processes * worker_connections(nginx作为http服务器的时候,作为反向代理服务器需要/2)
worker_processes  auto;
worker_cpu_affinity auto;
worker_rlimit_nofile 65535;  # 进程的最大打开文件数限制。这样nginx就不会有“too many open files”问题了（可以设置高并发使用）

# 全局错误日志定义类型[ debug | info | notice | warn | error | crit ]，越后面错误级别越高
error_log /var/log/nginx/error.log warn;  # nginx错误日志地址，注释表示关闭
# access_log /var/log/nginx/access.log;  # nginx访问日志，注释表示关闭


events {
    worker_connections  10240;  # 单个进程最大连接数，最大为65535，受worker_rlimit_nofile有影响）
}

http {
    access_log off;

    include             /etc/nginx/mime.types;  # 文件扩展名与文件类型映射表
    default_type        application/octet-stream;  # 默认文件类型
    charset utf-8;  # 默认编码
    fastcgi_intercept_errors on;  # 开启nginx自定义设置，比如后面的error_page会使用

    gzip on; # 开启gzip压缩输出
    gzip_min_length 1k; # 最小压缩文件大小
    gzip_buffers 4 16k; # 压缩缓冲区
    gzip_http_version 1.0; # 压缩版本（默认1.1，前端如果是squid2.5请使用1.0）
    gzip_comp_level 2; # 压缩等级
    gzip_types text/plain application/x-javascript text/css text/javascript application/x-httpd-php application/json text/json image/jpeg image/gif image/png application/octet-stream;  # 支持压缩的类型
    gzip_vary on;

    # tcp优化
    sendfile           on;
    tcp_nopush         on;
    tcp_nodelay        on;
    keepalive_timeout  120;  # 长连接超时时间，单位是秒

    # limit_zone zone_name $binary_remote_addr 10m;  # 控制一个ip多并发的个数，zone_name是名字，10m是记录区空间，使用方法在location下添加（limit_conn   zone_name  1;  # 最多一个并发）

    # client_header_buffer_size 2k;  # 客户请求头缓冲大小 nginx默认会用client_header_buffer_size这个buffer来读取header值,如果 header过大,它会使用large_client_header_buffers来读取
    # large_client_header_buffers 4 16k; # 默认为4K,请求行超过设置的第一个数4，请求的Header头信息大于设置的第二个数16k，会报"Request URI too large"(414)或“Bad request”(400)
    # client_body_buffer_size 128k; #缓冲区代理缓冲用户端请求的最大字节数
    # client_max_body_size 8m; # 请求体body最大大小
    # client_header_timeout  60s;  # 设置nginx读取客户端请求Header头信息的超时时间，如果超过该指令设置的时间，nginx将返回"Requet time out"错误信息（HTTP的408错误码）
    # client_body_timeout    60s;  # 设定nginx读取客户端请求内容的超时时间，如果超过该指令设置的时间，nginx将返回"Request time out"错误信息(HTTP状态码408)
    # send_timeout           60s;  # 设置发送给客户端的应答超时时间。指两次tcp握手，还没有转为established状态的时间。如果这个时间，客户端没有响应，Nginx则关闭连接

    include /etc/nginx/conf.d/*.conf;
}