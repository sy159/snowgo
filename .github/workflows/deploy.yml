name: Build, Push, and Deploy

on:
  release:
    types: [created]

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    outputs:
      SERVICE_IMAGE_NAME: ${{ steps.set_output.outputs.SERVICE_IMAGE_NAME }}
      SERVICE_IMAGE_VERSION: ${{ steps.set_output.outputs.SERVICE_IMAGE_VERSION }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Load .env file
        id: set_env
        run: |
          set -a
          source .env
          set +a
          echo "SERVICE_IMAGE_NAME=${SERVICE_IMAGE_NAME:-snowgo}" >> $GITHUB_ENV
          echo "SERVICE_IMAGE_VERSION=${SERVICE_IMAGE_VERSION:-v1.0}" >> $GITHUB_ENV

      - name: Extract version tag
        id: extract_tag
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          if [[ $TAG != v* ]]; then
            TAG="v$TAG"
          fi
          echo "SERVICE_IMAGE_VERSION=$TAG" >> $GITHUB_ENV

      - name: Print environment variables
        run: env

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.SERVICE_IMAGE_NAME }}:${{ env.SERVICE_IMAGE_VERSION }}

      - name: Set output for next job
        id: set_output
        run: |
          echo "SERVICE_IMAGE_NAME=${{ env.SERVICE_IMAGE_NAME }}" >> $GITHUB_OUTPUT
          echo "SERVICE_IMAGE_VERSION=${{ env.SERVICE_IMAGE_VERSION }}" >> $GITHUB_OUTPUT

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Load environment variables from previous job
        run: |
          echo "SERVICE_IMAGE_NAME=${{ needs.build_and_push.outputs.SERVICE_IMAGE_NAME }}" >> $GITHUB_ENV
          echo "SERVICE_IMAGE_VERSION=${{ needs.build_and_push.outputs.SERVICE_IMAGE_VERSION }}" >> $GITHUB_ENV

      # 私有仓库可能需要登录
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SNOWGO_SERVER_IP }}
          username: ${{ secrets.SNOWGO_SERVER_USER }}
          key: ${{ secrets.SNOWGO_SERVER_SSH_KEY }}
          script: |
            cd /data/snowgo

            # 更新 .env 文件中的 SERVICE_IMAGE_NAME 和 SERVICE_IMAGE_VERSION
            sed -i "s/^SERVICE_IMAGE_NAME=.*/SERVICE_IMAGE_NAME=${{ env.SERVICE_IMAGE_NAME }}/" .env
            sed -i "s/^SERVICE_IMAGE_VERSION=.*/SERVICE_IMAGE_VERSION=${{ env.SERVICE_IMAGE_VERSION }}/" .env
  
            # 拉取最新的 Docker 镜像
            docker-compose pull ${{ secrets.DOCKER_USERNAME }}/${{ env.SERVICE_IMAGE_NAME }}:${{ env.SERVICE_IMAGE_VERSION }}

            # 使用新镜像启动容器
            docker-compose down && docker-compose up -d
