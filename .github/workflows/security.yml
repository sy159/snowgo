name: Security Scan

#on:
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: main
#  schedule:
#    - cron: "0 14 * * 5"  # UTC 时间每周五 14:00 (对应北京时间周五 22:00)

on:
  workflow_dispatch: # 只能手动触发，等于禁用

permissions:
  contents: read
  security-events: write

jobs:
  codeql-analysis:
    name: CodeQL Scan
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'go' ]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Go 1.23.8
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.8'
          cache: true

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: +security-extended

      - name: Download Dependencies
        run: go mod download

      - name: Build Code
        run: go build ./...

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:go"
          upload: true

  gosec-scan:
    name: Gosec Scan
    runs-on: ubuntu-latest
    needs: codeql-analysis
    timeout-minutes: 15

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Go 1.23.8
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.8'
          cache: true
          cache-dependency-path: go.sum

      - name: Install Gosec
        run: |
          GOSEC_VERSION=$(curl -s "https://api.github.com/repos/securego/gosec/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')
          curl -sSfL "https://github.com/securego/gosec/releases/download/v${GOSEC_VERSION}/gosec_${GOSEC_VERSION}_linux_amd64.tar.gz" | tar -xz
          sudo mv gosec /usr/local/bin/

      - name: Download Dependencies
        run: go mod download

      - name: Run Gosec Analysis
        id: gosec
        run: |
          gosec -fmt=json -out=gosec-report.json -exclude-generated ./... || echo "::warning::Gosec found vulnerabilities"
        continue-on-error: true

      - name: Upload Gosec Report
        uses: actions/upload-artifact@v4
        with:
          name: gosec-security-report
          path: gosec-report.json
          retention-days: 7

      - name: Fail on Critical Issues
        run: |
          critical_count=$(jq '[.Issues[] | select(.severity == "HIGH" or .severity == "CRITICAL")] | length' gosec-report.json)
          if [ "$critical_count" -gt 0 ]; then
            echo "❌ Found $critical_count HIGH/CRITICAL issues"
            exit 1
          else
            echo "✅ No high/critical severity issues found"
          fi

  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [codeql-analysis, gosec-scan]
    if: always()

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: '*report*'  # 用单引号包裹，匹配所有包含 "report" 的制品
          path: ./artifacts

      - name: Aggregate Reports
        run: |
          echo "## Security Scan Summary [$(date '+%Y-%m-%d %H:%M:%S UTC%z')]" >> report.md
          echo "### Go Version: 1.23.8" >> report.md
          echo "### CodeQL Findings" >> report.md
          echo "View detailed results in [Security tab](https://github.com/${{ github.repository }}/security/code-scanning)" >> report.md
          echo "### Gosec Findings" >> report.md
          if [ -f artifacts/gosec-security-report/gosec-report.json ]; then
            echo "Total issues: $(jq '.Issues | length' artifacts/gosec-security-report/gosec-report.json)" >> report.md
            echo "High/Critical: $(jq '[.Issues[] | select(.severity == "HIGH" or .severity == "CRITICAL")] | length' artifacts/gosec-security-report/gosec-report.json)" >> report.md
          else
            echo "No Gosec report generated" >> report.md
          fi

      - name: Upload Security Report
        uses: actions/upload-artifact@v4
        with:
          name: security-summary-report
          path: report.md